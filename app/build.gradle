/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'jacoco'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

javafx {
    version = "17.0.2"
    modules = ['javafx.controls']
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.mockito:mockito-core:5.5.0'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    testImplementation 'org.testfx:testfx-junit5:4.0.16-alpha'
    testImplementation 'org.testfx:testfx-core:4.0.16-alpha'

    //compile group: 'commons-collections', name: 'commons-collections', version: '3.2.2'
    //testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.1'
    implementation 'com.google.guava:guava:31.0.1-jre'
}

application {
    // Define the main class for the application.
    mainClass = 'eric_burgers.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}



jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
    }
}


